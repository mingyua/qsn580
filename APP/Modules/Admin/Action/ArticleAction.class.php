<?php/**后台首页控制器*/Class ArticleAction extends CommonAction{	//文章列表		Public function Index(){		import('Class.Cate',APP_PATH);		import('Class.Page',APP_PATH);		$key=$_GET['key'];				$m=D('ArticleRelation');		$cate=M('cate')->where("module='Article'")->order("sort ASC")->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		if($key){		$where="id like '%$key%' || title like '%$key%'";		}else{		$where="";		}		$p=getpage($m,$where,10);		$list=$m->field(true)->where($where)->relation(true)->order('id desc')->select();		if(!$list){			$this->tip='<div class="f-18 c-red">暂时没有数据！</div>';		}		$this->article=$list;		$this->page=$p->show();				$this->display();		}	//编辑器图片上传处理加水印		//添加文章		Public function add(){	if(IS_POST){ 	import('ORG.Net.UploadFile');	$upload = new UploadFile();// 实例化上传类	$upload->maxSize  = C('FILE_SIZE') ;// 设置附件上传大小	$upload->allowExts  = explode(',',C('FILE_TYPE'));// 设置附件上传类型	$upload->savePath =C('upload_path');// 设置附件上传目录 		if(!$upload->upload()) {// 上传错误提示错误信息			$data['pic']="";			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();	 }		$upload = M("article"); // 实例化User对象			if($info[0]['savename']){			$pic=$info[0]['savepath'].$info[0]['savename'];				}else{			$pic="";				}			$time=strtotime($_POST['time']);		$data=array(			'kinds'			=>$_POST['kinds'],			'title'			=>$_POST['title'],			'retitle'		=>$_POST['retitle'],			'url'			=>$_POST['url'],			'pic' 			=>$pic,			'key'			=>$_POST['key'],			'description'	=>$_POST['description'],			'contents'		=>$_POST['contents'],			'status'		=>$_POST['status'],			'hits'			=>0,			'time'			=>$time,			'write'			=>$_POST['write']		);		 // 创建数据对象   		if($upload->add($data)){		$maxid = M("article")->order('id DESC')->LIMIT(1)->select(); // 实例化User对象		$bid=$maxid[0]['id'];			if(isset($_POST['aid'])){				$sql='INSERT INTO `'.C('DB_PREFIX').'ap_attr` (`bid`,`aid`) VALUES';				foreach ($_POST['aid'] as $v){					$sql.='('.$bid.','.$v.'),';					}					$sql=rtrim($sql,',');					M('ap_attr')->query($sql);				}			$this->success(C('add_ok'),U(GROUP_NAME.'/Article/index'));			}else{				$this->error(C('add_error'));								}					}else{					import('Class.Cate',APP_PATH);		$cate=M('cate')->where("module='Article'")->order('sort ASC')->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		 		$this->attr=M('attr')->where("module='Article' and status='1'")->order('sort ASC')->select();				$this->display();				}	}					//文章编辑页面		Public function edit(){		if(IS_POST){		$time=strtotime($_POST['time']);	 import('ORG.Net.UploadFile');	$upload = new UploadFile();// 实例化上传类	$upload->maxSize  = 3145728 ;// 设置附件上传大小	$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型	$upload->savePath =  './Uploads/';// 设置附件上传目录	 //设置需要生成缩略图，仅对图像文件有效	//$upload->thumb = true;	 //设置需要生成缩略图的文件后缀	//$upload->thumbPrefix = 'm_,s_';  //生产2张缩略图	 //设置缩略图最大宽度	//$upload->thumbMaxWidth = '200,50';	 //设置缩略图最大高度	//$upload->thumbMaxHeight = '200,50';	 if(!$upload->upload()) {// 上传错误提示错误信息			$data['pic']=$_POST['pic'];	 }else{// 上传成功 获取上传文件信息	$info =  $upload->getUploadFileInfo();			 }	 	$id=I('id',0,'intval');		$db=M('ap_attr');		//清空原权限		$db->where(array('bid'=>$id))->delete();		//组合新权限			$article=M('article');			$data=array();			$data['id']=$_POST['id'];			$data['kinds']=$_POST['kinds'];			$data['title']=$_POST['title'];			$data['retitle'] =$_POST['retitle'];			$data['url']=$_POST['url'];			if($info[0]['savename']){			$data['pic']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['pic']=$_POST['pic'];				}			$data['key']=$_POST['key'];			$data['description']=$_POST['description'];			$data['contents']=$_POST['contents'];			$data['status']=$_POST['status'];			$data['hits']=$_POST['hits'];			$data['time']=$time;			$data['write']=$_POST['write'];			$count=$article->save($data);   		if($count !==false){					$maxid = M("article")->where("id='$id'")->LIMIT(1)->select(); // 实例化User对象		$bid=$maxid[0]['id'];			if(isset($_POST['aid'])){				$sql='INSERT INTO `'.C('DB_PREFIX').'ap_attr` (`bid`,`aid`) VALUES';				foreach ($_POST['aid'] as $v){					$sql.='('.$bid.','.$v.'),';					}					$sql=rtrim($sql,',');					M('ap_attr')->query($sql);				}				$this->success(C('edit_ok').'！');			}else{				$this->error(C('edit_error'));					}					}else{					import('Class.Cate',APP_PATH);		$cate=M('cate')->where("module='Article'")->order('sort ASC')->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		$id=I('id',0, 'intval');		$id=$_GET['id'];		$article = M("article"); // 实例化User对象		$alist=$article=D('ArticleRelation')->where("id='$id'")->relation(true)->find();		$field=array('id','name');		$attr=M('attr')->where("module='Article' and status='1'")->order('sort ASC')->field($field)->select();		$aid=M('ap_attr')->where(array('bid'=>$id))->getField('aid',true);				$this->attr=attr_merge($attr,$aid);		$this->id=$id;			$this->assign('alist',$alist);		$this->display();		}	}			//文章状态设置	Public function status(){		$id = intval($_GET['id']);		$article = M("article"); // 实例化User对象		$zt=$article->where("id='$id'")->find();		if($zt['status']==1){		$data['status'] =0;		}else{		$data['status'] =1;		}		$article->where("id='$id'")->save($data);			}	//文章列表删除操作	Public function del(){		$articleid = intval($_GET['id']);		$article = M("article"); // 实例化User对象		if($article->where("id=$articleid")->delete()){			$db=M('ap_attr');			$db->where(array('bid'=>$articleid))->delete();					//$this->success(C('delete_ok'));					echo 1;				}else{					echo 0;				}				}		//文章列表全选删除操作	Public function delall(){				$articleid =$_POST['id'];		$name=$this->getActionName();//获取模型名称		$model=D($name);//获取当前模块的操作对象		if(!empty($model)){			$pk=$model->getpk();//获取传递参数（以ID删除）			$id=$_REQUEST['delall'];			if(!empty($articleid)){				$condition=array($pk=>array('IN',$articleid));								if(false!==$model->where($condition)->delete()){					echo 1;				}else{					echo 0;				}			}					}					}		//单文章模型管理页面	Public function Single(){		import('Class.Cate',APP_PATH);		import('Class.Page',APP_PATH);		$key=$_GET['key'];				$m=M('single');		if($key){		$where="id like '%$key%' || title like '%$key%'";		}else{		$where="";		}		$p=getpage($m,$where,10);		$list=$m->field(true)->where($where)->order('id desc')->select();		if(!$list){			$this->tip='<div class="f-18 c-red">暂时没有数据！</div>';		}		$this->single=$list;		$this->page=$p->show();				$this->display();				}	Public function editsge(){		if(IS_POST){		$time=strtotime($_POST['time']);	 import('ORG.Net.UploadFile');	$upload = new UploadFile();// 实例化上传类	$upload->maxSize  = 3145728 ;// 设置附件上传大小	$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型	$upload->savePath =  './Uploads/';// 设置附件上传目录 if(!$upload->upload()) {// 上传错误提示错误信息			$data['pic']=$_POST['pic'];	 }else{// 上传成功 获取上传文件信息	$info =  $upload->getUploadFileInfo();	 }			$single=M('single');			$data=array();			$data['id']=$_POST['id'];			$data['title']=$_POST['title'];			$data['url']=$_POST['url'];			if($info[0]['savename']){			$data['pic']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['pic']=$_POST['pic'];				}			$data['keys']=$_POST['keys'];			$data['description']=$_POST['description'];			$data['contents']=$_POST['contents'];			$data['status']=$_POST['status'];			$data['time']=$time;			$data['write']=$_POST['write'];			$count=$single->save($data);   		if($count !==false){				$this->success(C('edit_ok').'！',U(GROUP_NAME.'/Article/single'));			}else{				$this->error(C('edit_error'));					}				}else{		$id=I('id',0,'intval');		$single=M("single")->where("id='$id'")->find();		$this->assign('s',$single);		$this->display();		}	}	Public function deleted(){		$id = intval($_GET['id']);		$cate = M("cate"); // 实例化User对象		if($cate->where("id=$id")->delete()){					$this->success(C('delete_ok'),U(GROUP_NAME.'/Index/nav'));				}else{					$this->error(C('delete_error'));				}				}}?>