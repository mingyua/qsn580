<?phpclass CollectAction extends Action {	Public function index() {     $d=0;		$vset=M('vset');		$this->vset=$vset->select();		$this->display();	}	Public function caiji(){		function replace($string,$keyArray,$replacement,$i){ 			$result=''; 			if($i<(count($keyArray))){ 				$strSegArray=explode($keyArray[$i],$string); 				foreach ($strSegArray as $index=>$strSeg){ 					$x=$i+1; 					if($index==(count($strSegArray)-1)) 						$result=$result.replace($strSeg,$keyArray,$replacement,$x); 					else						$result=$result.replace($strSeg,$keyArray,$replacement,$x).$replacement[$i];                 				}      				return $result; 			} 			else{				return $string; 			} 		} 		$id=$_POST['id'];		$where="id='$id' and status=0";		$cjsj=M('vset')->where($where)->select();        import('Org.QueryList.QueryList');		//采集OSC的代码分享列表，标题 链接 作者		foreach ($cjsj as $key => $v) {			//采集地址			$sieturl=$v['site_url'];			//采集地址循环			$a = explode(',',$v['set2']); 			foreach ($a as $addr) { 			$cjurl =$sieturl.$v['set1'].$addr.".html";			//采集内容			$cjnr= array("title"=>array($v['title'],"text"),				"url"=>array($v['url'],"href"),				"image"=>array($v['image'],"src"),				);			//采集范围			$fanwei= $v['list_round'];			//使用curl抓取源码并以GB2312编码格式输出			$hj = QueryList::Query($cjurl,$cjnr,$fanwei,'curl','utf-8');			$arr = $hj->jsonArr;			foreach ($arr as $key => $value) {				$newurl=explode('http://',$value['url']);				 //如果文章表中已经存在采集的数据，将不执行写入程序				 if(M('video')->where("title like '{$value[title]}'")->find()){					 				 }else{					 				  if($newurl[0]){					$nrurl=$sieturl.$value['url'];				  }else{					$nrurl=$value['url'];				  }			$cj = array("zhuyan"=>array($v['zhuyan'],'text'),						"daoyan"=>array($v['daoyan'],'text'),						"play_url"=>array($v['play_url'],'html'),						"contents"=>array($v['contents'],'html','a'),													);			$fw =$v['content_round'];					//使用curl抓取源码并以utf-8编码格式输出			$hj = QueryList::Query($nrurl,$cj,$fw,'curl','utf-8');			$wznr = $hj->jsonArr;         //循环采集文章内容，写入数据库         foreach ($wznr as $key => $wzk) {          //判断如果采集内容不为空，就写入数据库。          if($wzk['contents']){            //如果下载地址存在，写入数据库             if($wzk['play_url']){             //判断采集表中的glzd内容是否为空，不为空将进行过滤             if($v['glzd']){				$keyArray=array($v['glzd'],$nrurl); 				$replacement=array($v['replace'],'');                $wzk['contents']=replace($wzk['contents'],$keyArray,$replacement,0);             }            $crsj['kinds']=$v['kinds'];            $crsj['title']=$value['title'];            $crsj['zhuyan']=$wzk['zhuyan'];            $crsj['daoyan']=$wzk['daoyan'];            $crsj['image']=$sieturl.$value['image'];            $crsj['play_url']=$wzk['play_url'];            $crsj['contents']=$wzk['contents'];            $crsj['status']="0";            $crsj['hot']="0";            $crsj['top']="0";            $crsj['hits']="0";            $crsj['time']=time();            $addsj=M('video')->add($crsj);          }                      } 		}          //写入数据库完毕				 		}		$d++;		  if($addsj){			echo	$cjlist= "当前采集：第".$d."条--".$crsj['title']."<br>";			}          //判断为新数据执行程序完毕 		}        //循环采集文章完毕 }//采集地址循环结束       //将当前采集表中的网站状态改为1        $zt['id']=$v['id'];        $zt['status']=1;        M('vset')->save($zt);		}      //循环采集程序完毕      $zhzt=M('vset')->where("id='$id'")->order('id desc')->find();      //判断最后一条数据状态是否为1，如果为1，将当前采集表中的数据状态全部改为0      if($zhzt['status']==1){		  echo "1";         $cjbsj=M('vset')->select();         foreach ($cjbsj as $key => $va) {           $ggzt['id']=$va['id'];           $ggzt['status']=0;           M('vset')->save($ggzt);         }      }	  }	Public function add() {		if(IS_POST){			$vset=M('vset');			$data=array();			$data['kinds']=$_POST['kinds'];			$data['site_name']=$_POST['site_name'];			$data['title']=$_POST['title'];			$data['zhuyan']=$_POST['zhuyan'];			$data['daoyan']=$_POST['daoyan'];			$data['image']=$_POST['image'];			$data['tag']=$_POST['tag'];			$data['tag']=$_POST['tag'];			$data['area']=$_POST['area'];			$data['year']=$_POST['year'];			$data['total']=$_POST['total'];			$data['nowji']=$_POST['nowji'];			$data['site_url']=$_POST['site_url'];			$data['url']=$_POST['url'];			$data['play_url']=$_POST['play_url'];			$data['phone_url']=$_POST['phone_url'];			$data['nowji']=$_POST['nowji'];			$data['contents']=$_POST['contents'];			$data['pos']=$_POST['pos'];			$data['content_round']=$_POST['content_round'];			$data['glzd']=$_POST['glzd'];			$data['replace']=$_POST['replace'];			$data['set1']=$_POST['set1'];			$data['set2']=$_POST['set2'];			$data['status']="0";   		if(M('vset')->add($data)){				$this->success(C('add_ok').'！');			}else{				$this->error(C('add_error'));					}					}else{		$vset=M('vset');		import('Class.Cate',APP_PATH);		$this->name=M('cate')->where("id='$kinds'")->find();		$cate=M('cate')->where("parentid='1'")->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		$this->display();		}	}	Public function edit() {		if(IS_POST){			$vset=M('vset');			$data=array();			$data['id']=$_POST['id'];			$data['kinds']=$_POST['kinds'];			$data['site_name']=$_POST['site_name'];			$data['title']=$_POST['title'];			$data['zhuyan']=$_POST['zhuyan'];			$data['daoyan']=$_POST['daoyan'];			$data['image']=$_POST['image'];			$data['tag']=$_POST['tag'];			$data['tag']=$_POST['tag'];			$data['area']=$_POST['area'];			$data['year']=$_POST['year'];			$data['total']=$_POST['total'];			$data['nowji']=$_POST['nowji'];			$data['site_url']=$_POST['site_url'];			$data['url']=$_POST['url'];			$data['play_url']=$_POST['play_url'];			$data['phone_url']=$_POST['phone_url'];			$data['nowji']=$_POST['nowji'];			$data['contents']=$_POST['contents'];			$data['pos']=$_POST['pos'];			$data['content_round']=$_POST['content_round'];			$data['glzd']=$_POST['glzd'];			$data['replace']=$_POST['replace'];			$data['set1']=$_POST['set1'];			$data['set2']=$_POST['set2'];			$data['status']=$_POST['status'];			$count=$vset->save($data);   		if($count !==false){							$this->success(C('edit_ok').'！');			}else{				$this->error(C('edit_error'));					}					}else{		$id=I('id',0, 'intval');		$id=$_GET['id'];		$vset=M('vset');		$vset=$vset->where("id='$id'")->find();		$kinds=$vset['kinds'];		$this->vset=$vset;		import('Class.Cate',APP_PATH);		$this->name=M('cate')->where("id='$kinds'")->find();		$cate=M('cate')->where("parentid='1'")->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		$this->display();		}	}	Public function status(){		$id=$_POST['id'];		$vset = M("vset"); // 实例化User对象		$zt=$vset->where("id='$id'")->find();		if($zt['status']==1){		$data['status'] =0;		}else{		$data['status'] =1;		}		$data['time']=time();		$vset->where("id='$id'")->save($data);		if($vset){			echo 1;		}else{			echo 0;		}	}	Public function collect(){		function pregs($pregc,$content,$num=1){				$content = preg_replace("/\r\n/","",$content); 				$content = preg_replace("/\r/","",$content); 				$content = preg_replace("/\n/","",$content); 				$html= trim($content);				preg_match($pregc,$html,$arr2);				return $arr2[$num];		}			//去除 空格 换行		function DeleteHtml($str){ 			$str = preg_replace("/\r\n/","",$str); 			$str = preg_replace("/\r/","",$str); 			$str = preg_replace("/\n/","",$str); 			return trim($str);		}		//去掉A标签 替换内容				function replace($tag_a,$re_words,$key){			$str1 = preg_replace("/<a[^>]*>/","",$tag_a);			$str2 = preg_replace("/<\/a>/","", $str1);			$str3 = str_replace($key,$re_words,$str2);			return $str3;		}		$vset=M('vset')->where("id=".$_GET['site']."")->find();		$pos=explode('-',$vset['pos']);		//p($pos);die;		$vid=$_GET['id']; 	if($vid<=$vset['set2']){		if($vid==0 || $vid==1){		$conn=iconv('GBK', 'UTF-8',file_get_contents($vset['url'].".html"));					}else{		$conn=iconv('GBK', 'UTF-8',file_get_contents($vset['url'].$vid.".html"));		}		$preg='#'.$vset['title'].'#iUs';		preg_match_all($preg,$conn,$arr);			//p($arr);die;		 	foreach($arr[1] as $id=>$v){				$title=$arr[2][$id];				//内容页面信息采集				$url=$vset['site_url'].$v;				$content=iconv('GBK', 'UTF-8',file_get_contents($url));				$zhuyan=pregs('#'.$vset[zhuyan].'#iUs',replace($content,'',''),$pos[0]);				//p($zhuyan);die;				$play_url=pregs('#'.$vset[play_url].'#iUs',DeleteHtml($content),$pos[1]);				$neirong=pregs('#'.$vset[contents].'#iUs',replace($content,$vset['replace'],$vset['glzd']),$pos[2]);				$video=M('video')->where("title like '%".$title."'")->limit(1)->find();				$cc=explode('$###',$play_url);				if($video){					if($video['play_url']<>$play_url){						$data['play_url'] =$play_url;						$data['nowji'] =count($cc)-1;						$data['time'] =time();						M('video')->where("id='".$video['id']."'")->save($data);						$up="更新成功";					}else{						$data['nowji'] =count($cc)-1;						M('video')->where("id='".$video['id']."'")->save($data);								$up="无操作";										}				  echo  $tihs->lists="<a>".$title."</a><font color='#f00'>已经采集</font>...".$up."<br>";				}else{				 echo $tihs->lists="<a>".$title."</a><font color='blue'>正在采集...</font><br>";				//如果存在数据标题就不添加数据								$crsj['kinds']=$vset['kinds'];				$crsj['title']=$title;				$crsj['zhuyan']=$zhuyan;				$crsj['image']=$vset['site_url'].$arr[4][$id];				$crsj['nowji'] =count($cc)-1;				$crsj['play_url']=$play_url;				$crsj['contents']=$neirong;				$crsj['status']="0";				$crsj['hot']="0";				$crsj['top']="0";				$crsj['hits']="0";				$crsj['time']=time();				$addsj=M('video')->add($crsj);				}				//sleep(1);				//ob_flush();				//flush();				$vid++;			echo "<script>location.href='".U(GROUP_NAME.'/Collect/collect/',array('site'=>$vset['id'],'id'=>$vid))."';</script>";		}}else{	$this->lists="采集结束";}$this->display();				}	Public function cheshi(){		function pregs($pregc,$content,$num=1){				$content = preg_replace("/\r\n/","",$content); 				$content = preg_replace("/\r/","",$content); 				$content = preg_replace("/\n/","",$content); 				$html= trim($content);				preg_match($pregc,$html,$arr2);				return $arr2[$num];		}			//去除 空格 换行		function DeleteHtml($str){ 			$str = preg_replace("/\r\n/","",$str); 			$str = preg_replace("/\r/","",$str); 			$str = preg_replace("/\n/","",$str); 			return trim($str);		}		//去掉A标签 替换内容				function replace($tag_a,$re_words,$key){			$str1 = preg_replace("/<a[^>]*>/","",$tag_a);			$str2 = preg_replace("/<\/a>/","", $str1);			$str3 = str_replace($key,$re_words,$str2);			return $str3;		}		$vset=M('vset')->where("id=".$_GET['site']."")->find();		$pos=explode('-',$vset['pos']);		//p($pos);die;		$vid=$_GET['id']; 	if($vid<=$vset['set2']){		$conn=iconv('GBK', 'UTF-8',file_get_contents($vset['url'].$vid.".html"));		$preg='#'.$vset['title'].'#iUs';		preg_match_all($preg,$conn,$arr);			//p($arr);die;		 	foreach($arr[1] as $id=>$v){				$title=$arr[2][$id];				//内容页面信息采集				$url=$vset['site_url'].$v;				$content=iconv('GBK', 'UTF-8',file_get_contents($url));				$zhuyan=pregs('#'.$vset[zhuyan].'#iUs',replace($content,'',''),$pos[0]);				//p($zhuyan);die;				$play_url=pregs('#'.$vset[play_url].'#iUs',DeleteHtml($content),$pos[1]);				$neirong=pregs('#'.$vset[contents].'#iUs',replace($content,$vset['replace'],$vset['glzd']),$pos[2]);				$video=M('video')->where("title like '%".$title."'")->limit(1)->find();				if($video){				}else{				 echo $tihs->lists="标题：<a>".$title."</a><font color='blue'>正在采集...</font><br>				 分类：".$vset['kinds']."<br>				 主演：".$zhuyan."<br>				 图片：".$vset['site_url'].$arr[4][$id]."<br>				 下载地址：".$play_url."<br>				 内容：".$neirong."<br>";				}				$vid++;			echo "<script>location.href='".U(GROUP_NAME.'/Collect/cheshi/',array('site'=>$vset['id'],'id'=>$vid))."';</script>";		}}else{$this->lists="采集结束";}$this->display();				}	}