<?php/**后台首页控制器*/Class ProductAction extends CommonAction{	Public function index(){		import('Class.Cate',APP_PATH);		import('Class.Page',APP_PATH);		$key=$_GET['key'];				$m=D('ProductRelation');		$cate=M('cate')->where("module='Product'")->order("sort ASC")->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		if($key){		$where="id like '%$key%' || title like '%$key%'";		}else{		$where="";		}		$p=getpage($m,$where,10);		$list=$m->field(true)->where($where)->relation(true)->order('id desc')->select();		foreach($list as $v=>$k){			$id=$k['id'];			$price=M('price')->where("pid='$id'")->order('price DESC')->find();			$list[$v]['pushprice']=$price['price'];						$list[$v]['uid']=$price['uid'];						$list[$v]['uname']=$price['uname'];					} 		if(!$list){			$this->tip='<div class="f-18 c-red">暂时没有数据！</div>';		}		$this->product=$list;		$this->page=$p->show();				$this->set=M('product_set')->where("id='1'")->find();		$this->display();		}		//添加产品展示页面		Public function add(){	if(IS_POST){		import('ORG.Net.UploadFile');		$upload = new UploadFile();// 实例化上传类		$upload->maxSize  = 3145728 ;// 设置附件上传大小		$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型		$upload->savePath =  './Uploads/';// 设置附件上传目录		$upload->autoSub = true;                      //是否使用子目录保存上传文件  		$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 		$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  		if(!$upload->upload()) {// 上传错误提示错误信息			$data['image']="";			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();	 }		$upload = M("product"); // 实例化User对象		$data=array(			'kinds'=>$_POST['kinds'],			'title'=>$_POST['title'],			'retitle'=>$_POST['retitle'],			'url'=>$_POST['url'],			'image'=>substr($info[0]['savepath'].$info[0]['savename'],1),			'keys'=>$_POST['keys'],			'description'=>$_POST['description'],			'contents'=>$_POST['contents'],			'sort'=>$_POST['sort'],			'status'=>$_POST['status'],			'time'=>time(),			'write'=>$_POST['write'],			'saleprice'=>$_POST['saleprice'],			'starttime'=>strtotime($_POST['starttime']),			'endtime'=>strtotime($_POST['endtime']),			'price'=>$_POST['price'],			'pinpai'=>$_POST['pinpai'],			'pcounts'=>$_POST['pcounts'],			'ppost'=>$_POST['ppost'],		); // 创建数据对象   		if($upload->add($data)){			$this->success(C('add_ok'),U(GROUP_NAME.'/product/index'));			}else{				$this->error(C('add_error'));				}					}else{		import('Class.Cate',APP_PATH);		$cate=M('cate')->where("module='Product'")->order('sort ASC')->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		 $this->unit=M('pay')->where("kinds='151'")->order('sort ASC')->select();		 $this->pingpai=M('select')->where("pid='1'")->order('sort ASC')->select();		$this->attr=M('attr')->where("module='Product' and status='1'")->order('sort ASC')->select();		$this->display();					}	}//编辑产品展示页面	Public function edit(){		if(IS_POST){		 import('ORG.Net.UploadFile');		$upload = new UploadFile();// 实例化上传类		$upload->maxSize  = 3145728 ;// 设置附件上传大小		$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型		$upload->savePath =  './Uploads/';// 设置附件上传目录		$upload->autoSub = true;                      //是否使用子目录保存上传文件  		$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 		$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  	 	if(!$upload->upload()) {// 上传错误提示错误信息			$data['image']=$_POST['img'];		 }else{// 上传成功 获取上传文件信息		$info =  $upload->getUploadFileInfo();		 }			$product = M("product"); // 实例化User对象			$data=array();				$data['id']=$_POST['pid'];				$data['kinds']=$_POST['kinds'];				$data['title']=$_POST['title'];				$data['retitle']=$_POST['retitle'];				$data['url']=$_POST['url'];				if($info[0]['savename']){				$data['image']=substr($info[0]['savepath'].$info[0]['savename'],1);					}else{				$data['image']=$_POST['img'];					}				$data['keys']=$_POST['keys'];				$data['description']=$_POST['description'];				$data['contents']=$_POST['contents'];				$data['sort']=$_POST['status'];				$data['status']=$_POST['status'];				$data['hits']=$_POST['hits'];				$data['time']=time();				$data['write']=$_POST['write'];				$data['saleprice']=$_POST['saleprice'];				$data['starttime']=strtotime($_POST['starttime']);				$data['endtime']=strtotime($_POST['endtime']);				$data['price']=$_POST['price'];				$data['pinpai']=$_POST['pinpai'];				$data['pcounts']=$_POST['pcounts'];				$data['ppost']=$_POST['ppost'];							$count=$product->save($data);			if($count !==false){				$this->success(C('edit_ok'),U(GROUP_NAME.'/product/index'));				}	else{					$this->error(C('edit_error'));										}		}else{		import('Class.Cate',APP_PATH);		$cate=M('cate')->where("module='product'")->order('sort ASC')->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		$id=I('id',0, 'intval');		$_SESSION['p_id']=$id;		$this->imglist=M("photo")->where("p_id='$id'")->select();		$this->id=$id;		$plist=D('ProductRelation')->where("id=$id")->relation(true)->find();		$glist=M("good_attr")->where("pid=$id")->find();		$this->glist=$glist;		$this->plist=$plist;				 $this->pingpai=M('select')->where("pid='1'")->order('sort ASC')->select();				$this->display();					}	}//AJAX删除图片处理	Public function delimg(){		$id = intval($_GET['id']);		$photo = M("photo"); // 实例化User对象		$photo->where("id=$id")->delete();			}//批量上传图片处理		function uploadImg() {		$id=$_GET['id'];		import('ORG.Net.UploadFile');		$upload = new UploadFile();// 实例化上传类		$upload->maxSize  = 3145728 ;// 设置附件上传大小		$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型		$savepath='./uploads/'.date('Ymd').'/';		if (!file_exists($savepath)){			mkdir($savepath);		}		$upload->savePath =  $savepath;// 设置附件上传目录		if(!$upload->upload()) {// 上传错误提示错误信息			$this->error($upload->getErrorMsg());		}else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();			// 保存表单数据 包括附件数据			$Photo = M("Photo"); // 实例化User对象			$product=M("product");			$maxid=$product->where("id>0")->order("id desc")->limit("1")->find();			if($id){				$pid=$_GET['id'];			}else{			$pid=$maxid['id']+1;							}			$Photo->create(); // 创建数据对象			$data['p_id']    = $pid;			$data['image'] = substr($info[0]['savepath'], 1) . $info[0]['savename'];			$data['create_time']    = NOW_TIME;			$Photo->add($data); // 写入用户数据到数据库}	}			//产品列表删除操作	Public function del(){		$id = intval($_GET['id']);		$product = M("product"); // 实例化User对象		if($product->where("id='$id'")->delete()){					echo 1;				}else{					echo 0;				}		}	//产品列表全选删除操作	Public function delall(){				$id =$_POST['id'];		$name=$this->getActionName();//获取模型名称		$model=D($name);//获取当前模块的操作对象		if(!empty($model)){			$pk=$model->getpk();//获取传递参数（以ID删除）			if(!empty($id)){				$condition=array($pk=>array('IN',$id));								if(false!==$model->where($condition)->delete()){					echo 1;				}else{					echo 0;				}			}					}					}	Public function status(){		$id = intval($_GET['id']);		$product = M("product"); // 实例化User对象		$zt=$product->where("id='$id'")->find();		if($zt['status']==1){		$data['status'] =0;		}else{		$data['status'] =1;		}		$product->where("id='$id'")->save($data);		if($product){			echo 1;		}else{			echo 0;		}			}		Public function paystatus(){		$uid=$_POST['uid'];		$uname=$_POST['uname'];		$maxprice=$_POST['maxprice'];		$id=$_POST['id'];		$product = M("product"); // 实例化User对象		$zt=$product->where("id='$id'")->find();		if($zt['paystatus']==1){		$data['paystatus'] =0;		}else{		$data['paystatus'] =1;		}		$product->where("id='$id'")->save($data);		if($product){			//写入订单			$order=M('orderlist');			if($zt['paystatus']==0){			$data=array(				'userid'=>$uid,				'username'=>$uname,				'ordid'=>"GZQHQC".time(),				'ordtime'=>time(),				'productid'=>$zt['id'],				'ordtitle'=>$zt['title'],				'ordbuynum'=>'1',				'ordprice'=>$maxprice,				'ordfee'=>$maxprice,				'ordstatus'=>"1",				'payment_type'=>"0",				'isused'=>'0',			);			$add=$order->add($data);			}else{				$order->where("productid='$id'")->delete();			}			echo 1;		}else{			echo 0;		}	}			Public function changeen(){		import('Class.Pinyin',APP_PATH);		$pinyin =new Pinyin(); 		$str =$_POST['str']; 		echo $pinyin->strtopin($str,1); //首字母		//echo $pinyin->strtopin($str);// 全拼	}	Public function set(){	if(IS_POST){		$data=array('id'=>1,'counts'=>$_POST['counts']);		$set=M('product_set')->save($data);		if($set){				$this->success(C('edit_ok'),U(GROUP_NAME.'/product/index'));		}else{				$this->error(C('edit_error'));		}	}	}}?>