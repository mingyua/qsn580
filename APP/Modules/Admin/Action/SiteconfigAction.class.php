<?php/**后台首页控制器*/Class SiteconfigAction extends Action{	Public function index(){		$this->display();		}	Public function config(){		//站点配置		$config=M('config')->find();		$this->assign('config',$config);		//邮箱配置		$email=M('email')->find();		$this->assign('email',$email);		$this->display();				}		public function updateemail(){			$email=new Model('email');			$data=array();			$data['type']=$_POST['type'];			$data['post_email']=$_POST['post_email'];			$data['send_email']=$_POST['send_email'];			$data['email_pwd']=$_POST['email_pwd'];			$data['email_title']=$_POST['email_title'];			$data['contents']=$_POST['content'];			if($email->where('id=1')->save($data)){				$this->success('系统邮箱配置成功',U(GROUP_NAME.'/Siteconfig/config',''));			}else{				$this->error('系统邮箱配置失败,请联系管理员');					}		}				public function sendmail(){		$fromtitle=$_POST['type'];		$email_title=$_POST['email_title'];		$content=$_POST['content'];		$toemail=$_POST['post_email'];		import('Class.Mail',APP_PATH);		SendMail($toemail,$email_title,$content,$fromtitle);		}					Public function nav(){		import('Class.Cate',APP_PATH);		$cate=M('cate')->order('sort ASC')->select();	    $this->cate=Cate::channel($cate,'--');		$this->display();				}	Public function addnav(){		import('Class.Cate',APP_PATH);		$cate=M('cate')->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;|--');		$this->display();	}	Public function editnav(){		import('Class.Cate',APP_PATH);		$cate=M('cate')->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;|--');				$this->id=I('id',0, 'intval');		$id=$_GET['id'];		$cate = M("cate"); 		$k=$cate= M("cate")->where("id=$id")->find();		$kn=$k['pid'];		$kname=$cate= M("cate")->where("id=$kn")->find();		$this->assign('k',$k);		$this->assign('kname',$kname);		$this->display();	}	Public function addnavhandle(){				$cate=new Model('cate');			 import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg','swf','flv');// 设置附件上传类型			$upload->autoSub = true;                      //是否使用子目录保存上传文件  			$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 			$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  			//完整的头像路径			$upload->savePath =  './uploads/';// 设置附件上传目录		if(!$upload->upload()) {// 上传错误提示错误信息			$data['image']=$_POST['img'];			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();			 }			$data=array();			$data['name']=$_POST['name'];			$data['pid']=$_POST['pid'];			$data['sort']=$_POST['sort'];			$data['module']=$_POST['module'];			$data['parentid']="1";			$data['url']=$_POST['url'];			$data['window']=$_POST['window'];			$data['status']=$_POST['status'];			$data['enable']=$_POST['enable'];			if($info[0]['savename']){			$data['image']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['image']=$_POST['img'];				}			$data['title']=$_POST['title'];			$data['keys']=$_POST['keys'];			$data['description']=$_POST['description'];			$data['nav']=$_POST['nav'];			if(M('cate')->add($data)){				if($data['module']=="Single"){					$maxid = M("cate")->order('id DESC')->LIMIT(1)->select(); // 实例化User对象					$sid=$maxid[0]['id'];					$single = M("Single"); //实例化User对象					$data=array(						'kinds'=>$sid,						'title'=>$_POST['name'],					); //创建数据对象				$single->add($data);								}			$this->SUCCESS('添加成功',U(GROUP_NAME.'/Siteconfig/nav'));					}else{			$this->error('添加失败');					}		}	Public function update(){			 import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg','swf','flv');// 设置附件上传类型			$upload->autoSub = true;                      //是否使用子目录保存上传文件  			$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 			$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  			//完整的头像路径			$upload->savePath =  './uploads/';// 设置附件上传目录			$upload->thumb = true;			 //设置需要生成缩略图的文件后缀			$upload->thumbPrefix = 'm_,s_';  //生产2张缩略图			 //设置缩略图最大宽度			$upload->thumbMaxWidth = '200,50';			 //设置缩略图最大高度			$upload->thumbMaxHeight = '200,50';			 		if(!$upload->upload()) {// 上传错误提示错误信息			$data['pic']=$_POST['pic'];			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();						 }				$cate=M('cate');			$id=$_POST['id'];			$data=array();			$data['name']=$_POST['name'];			$data['pid']=$_POST['pid'];			$data['sort']=$_POST['sort'];			$data['module']=$_POST['module'];			$data['parentid']="1";			$data['url']=$_POST['url'];			$data['window']=$_POST['window'];			$data['status']=$_POST['status'];			$data['enable']=$_POST['enable'];			if($info[0]['savename']){			$data['image']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['image']=$_POST['img'];				}			$data['title']=$_POST['title'];			$data['keys']=$_POST['keys'];			$data['description']=$_POST['description'];			$data['nav']=$_POST['nav'];			$edit=$cate->where("id=$id")->save($data);			if($edit !==false){				if($data['module']=="Single"){					$sid=$id;					$single = M("single"); //实例化User对象					$data=array(						'kinds'=>$sid,						'title'=>$_POST['name'],					); //创建数据对象				$skid=M('single')->where("kinds=$sid")->select();				if($skid){				$single->where("kinds=$sid")->save($data);					}else{					$single->add($data);				}				}							$this->SUCCESS('修改成功',U(GROUP_NAME.'/Siteconfig/nav'));					}else{			$this->error('修改失败');					}		}	Public function deleted(){		$id = intval($_GET['id']);		$cate = M("cate"); // 实例化User对象		if($cate->where("id=$id")->delete()){					$single = M("single"); // 实例化User对象											$single->where("kinds=$id")->delete();					$this->success(C('delete_ok'),U(GROUP_NAME.'/Siteconfig/nav'));				}else{					$this->error(C('delete_error'));				}				}	Public function upfileset(){		$this->id=I('id',0, 'intval');		$id=$_GET['id'];		$upset = M("water"); // 实例化User对象		$file=$upset->where("id=1")->find();		$file['file_size'];		$this->assign('file',$file);		$this->display();				}	Public function upwater(){		import('ORG.Net.UploadFile');		$upload = new UploadFile();// 实例化上传类		$upload->maxSize  = 3145728 ;// 设置附件上传大小		$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型		$upload->savePath =  './Uploads/';// 设置附件上传目录		if(!$upload->upload()) {// 上传错误提示错误信息			$data['water_image']=$_POST['water_image'];			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();			 }			$upset=new Model('water');			$data=array();			$data['file_size']=$_POST['file_size'];			$data['file_type']=$_POST['file_type'];			$data['status']=$_POST['status'];			$data['font_water']=$_POST['font_water'];			$data['font_size']=$_POST['font_size'];			$data['font_color']=$_POST['font_color'];			$data['water_w']=$_POST['water_w'];			$data['water_h']=$_POST['water_h'];			if($info[0]['savename']){			$data['water_image']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['water_image']=$_POST['water_image'];				}			$data['opacity']=$_POST['opacity'];			$data['water_p']=$_POST['water_p'];			$data['water_pos']=$_POST['water_pos'];			if($upset->where("id=1")->save($data)){			 //setting.config.php文件的路径，通过settingfile_path来设定；			 $W=$upset->where("id=1")->find();			$setfile='./APP'.C('settingfile_path'); 			$b=array(				//上传文件大小				'FILE_SIZE'=>$W['file_size'],				//上传文件类型				'FILE_TYPE'=>$W['file_type'],				//是否开启图片水印				'STATUS'=>$W['status'],				//文字水印内容				'font_water'=>$W['font_water'],				//水印文字大小				'WATER_FONTSIZE'=>$W['font_size'],				//水印文字颜色				'WATER_FONTCOLOR'=>$W['font_color'],				//上传水印的宽				'water_w'=>$W['water_w'],				//上传水印的高				'water_h'=>$W['water_h'],				//水印图路径				'WATER_IMAGE'=> $W['water_image'],				//水印透明度				'WATER_ALPHA'=>$W['opacity'],				//水印边距				'WATER_PADDING'=>$W['water_p'],				//水印位置				'WATER_POS'=>$W['water_pos'],				//JPEG图片压缩比				'WATER_COMPRESSION'=>80,				//水印文字字体文件(写入中文字时需使用支持中文的字体文件)				'WATER_FONTFILE'=> './font.ttf',				//水印文字字符编码				'WATER_CHARSET'=> 'UTF-8',			 );			 //这里将新的参数值，通过后台的表单提交过来；						$settingstr="<?php \n return array(\n";			 foreach($b as $key=>$v){				$settingstr.= "\t'".$key."'=>'".$v."',\n\n";			 }			$settingstr.="\n);\n?>\n";			file_put_contents($setfile,$settingstr); //通过file_put_contents保存setting.config.php文件；								$this->success('信息修改成功',U(GROUP_NAME.'/Siteconfig/upfileset'));			}else{				$this->error('您没有任何修改或错误！');					}		}public function updateconfig(){			import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型			$upload->savePath =  './Uploads/';// 设置附件上传目录			if(!$upload->upload()) {// 上传错误提示错误信息				$data['logo']=$_POST['logo'];				 }else{// 上传成功 获取上传文件信息				$info =  $upload->getUploadFileInfo();				 }			$config=new Model('config');			$data=array();			$data['site_title']=$_POST['title'];			$data['site_url']=$_POST['url'];			if($info[0]['savename']){			$data['logo']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['logo']=$_POST['logo'];				}			$data['site_email']=$_POST['email'];			$data['site_name']=$_POST['name'];			$data['seo_keywords']=$_POST['keywords'];			$data['seo_description']=$_POST['description'];			$data['site_peo']=$_POST['peo'];			$data['site_phone']=$_POST['phone'];			$data['site_tel']=$_POST['tel'];			$data['site_fax']=$_POST['fax'];			$data['site_post']=$_POST['post'];			$data['site_icp']=$_POST['icp'];			$data['site_addr']=$_POST['addr'];			$data['site_foot']=$_POST['content'];			if($config->where('id=1')->save($data)){				$this->success('网站配置信息修改成功');			}else{				$this->error('您没有任何修改或配置错误！');					}		}			// $path为文件的路径	// $fileName文件夹名称    public function rmFile($path,$fileName){        //去除空格        $path = preg_replace('/(\/){2,}|{\\\}{1,}/','/','__ROOT__/APP');            //得到完整目录            $path.= $fileName;        //判断此文件是否为一个文件目录        if(is_dir($path)){            //打开文件            if ($dh = opendir($path)){                //遍历文件目录名称                   while (($file = readdir($dh)) != false){                       //逐一进行删除                       unlink($path.'\\'.$file);                       }                       //关闭文件                      closedir($dh);                }                }    }//一对一删除缓存    public function cache(){        //前台用ajax get方式进行提交的，这里是先判断一下        if($_GET['type']){             //获取提交过来的值（也就是要删除的文件夹名称）            $type=$_GET['type'];            //获取文件的绝对路径            $abs_dir=dirname(dirname(dirname(dirname(__FILE__))));            //与要删除的文件夹里的文件进行组合            $pa=$abs_dir.'\Runtime\\';           //调用上面写好的方法            $this->rmFile($pa,$type);            //返回提示信息            $this->ajaxReturn(1,'清除成功',1);        }else{            $this->display();        }    }//一键清除所有缓存    public function allrun(){        ////前台用ajax get方式进行提交的，这里是先判断一下        if($_GET['type']){          //得到传递过来的值            $type=$_GET['type'];            //将传递过来的值进行切割，我是已“-”进行切割的            $name=explode('-', $type);            //得到切割的条数，便于下面循环            $count=count($name);           //循环调用上面的方法            for ($i=0;$i<$count;$i++){                //得到文件的绝对路径                $abs_dir=dirname(dirname(dirname(dirname(__FILE__))));                //组合路径                $pa=$abs_dir.'\Runtime\\';                //调用删除文件夹下所有文件的方法                $this->rmFile($pa,$name[$i]);                }           //给出提示信息            $this->ajaxReturn(1,'清除成功',1);        }else{            $this->display();        }    }		}?>