<?phpclass SlideAction extends Action {	Public function index() {		import('Class.Cate',APP_PATH);		$cate=M('cate')->where("module='Article'")->order("sort ASC")->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		$this->slide=D('SlideRelation')->relation(true)->order($order)->select();		$this->display();	}	Public function add() {		if(IS_POST){			$slide=new Model('slide');			 import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg','swf','flv');// 设置附件上传类型			$upload->autoSub = true;                      //是否使用子目录保存上传文件  			$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 			$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  			//完整的头像路径			$upload->savePath =  './uploads/';// 设置附件上传目录		 		if(!$upload->upload()) {// 上传错误提示错误信息			$this->error($upload->getErrorMsg());			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();			 }			$data=array();			$data['id']=$_POST['id'];			$data['kinds']=$_POST['kinds'];			$data['title']=$_POST['title'];			$data['retitle'] =$_POST['retitle'];			$data['url']=$_POST['url'];			$data['pic']=$info[0]['savepath'].$info[0]['savename'];			$data['contents']=$_POST['contents'];			$data['sort']=$_POST['sort'];			$data['status']=$_POST['status'];			$data['time']=time();			if(M('slide')->add($data)){				$this->success('添加成功',U(GROUP_NAME.'/Slide/index'));				}else{					$this->error('添加失败');					}					}else{		import('Class.Cate',APP_PATH);		$cate=M('cate')->where("module='Slide'")->order('sort ASC')->select();		 $this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		$this->id=I('id',0, 'intval');		$id=$_GET['id'];		$slide = M("slide"); // 实例化User对象		$slide=$slide->where("id=$id")->find();		$this->assign('slide',$slide);		$this->display ();					}	}	Public function edit() {		if(IS_POST){			$slide=new Model('slide');			 import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg','swf','flv');// 设置附件上传类型			$upload->autoSub = true;                      //是否使用子目录保存上传文件  			$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 			$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  			//完整的头像路径			$upload->savePath =  './uploads/';// 设置附件上传目录		 		if(!$upload->upload()) {// 上传错误提示错误信息			$data['pic']=$_POST['pic'];			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();			//import('Class.Image',APP_PATH);			//Image::water('./Uploads/'.$info[0]['savename']); 				 }			$data=array();			$data['id']=$_POST['id'];			$data['kinds']=$_POST['kinds'];			$data['title']=$_POST['title'];			$data['retitle'] =$_POST['retitle'];			$data['url']=$_POST['url'];			if($info[0]['savename']){			$data['pic']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['pic']=$_POST['pic'];				}			$data['contents']=$_POST['contents'];			$data['sort']=$_POST['sort'];			$data['status']=$_POST['status'];			$data['time']=time();			$count=$slide->save($data);			if($count !==false){				$this->success('数据修改成功！',U(GROUP_NAME.'/slide/index'));			}else{				$this->error('数据修改失败');					}					}else{		import('Class.Cate',APP_PATH);		$cate=M('cate')->where("module='Slide'")->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');				$this->id=I('id',0, 'intval');		$id=$_GET['id'];		$slide = M("slide"); // 实例化User对象		$slide=$slide->where("id=$id")->find();		$this->cname=M('cate')->where("id='$slide[kinds]'")->find();		$this->assign('slide',$slide);		$this->display ();					}	}	Public function del(){		$id = intval($_GET['id']);		$slide = M("slide"); // 实例化User对象		if($slide->where("id=$id")->delete()){					echo 1;				}else{					echo 0;				}				}			Public function delall(){				$ids = I('id');		$article = M("slide");		if($article->where(array('id'=>array('in',$ids)))->delete()){					$this->success(C('delete_ok'),U(GROUP_NAME.'/Slide/index'));				}else{					$this->error(C('delete_error'));				}				}		}