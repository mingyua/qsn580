<?php/**后台首页控制器*/Class SystemAction extends CommonAction{	Public function base(){		//站点配置		if (IS_POST){			import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型			$upload->savePath =  './Uploads/';// 设置附件上传目录			if(!$upload->upload()) {// 上传错误提示错误信息				$data['logo']=$_POST['logo'];				 }else{// 上传成功 获取上传文件信息				$info =  $upload->getUploadFileInfo();				 }			$config=new Model('config');			$data=array();			$data['site_title']=$_POST['title'];			$data['site_url']=$_POST['url'];			if($info[0]['savename']){			$data['logo']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['logo']=$_POST['logo'];				}			$data['site_email']=$_POST['email'];			$data['site_name']=$_POST['name'];			$data['seo_keywords']=$_POST['keywords'];			$data['seo_description']=$_POST['description'];			$data['site_peo']=$_POST['peo'];			$data['site_phone']=$_POST['phone'];			$data['site_tel']=$_POST['tel'];			$data['site_fax']=$_POST['fax'];			$data['site_post']=$_POST['post'];			$data['site_icp']=$_POST['icp'];			$data['site_addr']=$_POST['addr'];			$data['site_foot']=$_POST['content'];			$data['site_count']=$_POST['site_count'];			if($config->where('id=1')->save($data)){				$this->success('网站配置信息修改成功');			}else{				$this->error('您没有任何修改或配置错误！');					}					}else{		$config=M('config')->find();		$this->assign('sys',$config);		$this->display();					}	}	Public function shielding(){//屏蔽词			$word=new Model('shield');			if($_POST){			if($word->where('id=1')->save($_POST)){				$this->success('成功',U(GROUP_NAME.'/System/shielding',''));			}else{				$this->error('失败,请联系管理员');					}			}else{			$words=M('shield')->find();			$this->assign('words',$words);			$this->display();			}	}	Public function upfileset(){//水印设置		if(IS_POST){		import('ORG.Net.UploadFile');		$upload = new UploadFile();// 实例化上传类		$upload->maxSize  = 3145728 ;// 设置附件上传大小		$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型		$upload->savePath =  './Uploads/';// 设置附件上传目录		if(!$upload->upload()) {// 上传错误提示错误信息			$data['water_image']=$_POST['water_image'];			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();			 }			$upset=new Model('water');			$data=array();			$data['upload_path']=$_POST['upload_path'];			$data['file_size']=$_POST['file_size'];			$data['file_type']=$_POST['file_type'];			$data['status']=$_POST['status'];			$data['font_water']=$_POST['font_water'];			$data['font_size']=$_POST['font_size'];			$data['font_color']=$_POST['font_color'];			$data['water_w']=$_POST['water_w'];			$data['water_h']=$_POST['water_h'];			if($info[0]['savename']){			$data['water_image']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['water_image']=$_POST['water_image'];				}			$data['opacity']=$_POST['opacity'];			$data['water_p']=$_POST['water_p'];			$data['water_pos']=$_POST['water_pos'];			if($upset->where("id=1")->save($data)){			 //setting.config.php文件的路径，通过settingfile_path来设定；			 $W=$upset->where("id=1")->find();			$setfile='./APP'.C('settingfile_path'); 			$b=array(				//上传路径				'UPLOAD_PATH'=>$W['upload_path'],				//上传文件大小				'FILE_SIZE'=>$W['file_size'],				//上传文件类型				'FILE_TYPE'=>$W['file_type'],				//是否开启图片水印				'STATUS'=>$W['status'],				//文字水印内容				'font_water'=>$W['font_water'],				//水印文字大小				'WATER_FONTSIZE'=>$W['font_size'],				//水印文字颜色				'WATER_FONTCOLOR'=>$W['font_color'],				//上传水印的宽				'water_w'=>$W['water_w'],				//上传水印的高				'water_h'=>$W['water_h'],				//水印图路径				'WATER_IMAGE'=> $W['water_image'],				//水印透明度				'WATER_ALPHA'=>$W['opacity'],				//水印边距				'WATER_PADDING'=>$W['water_p'],				//水印位置				'WATER_POS'=>$W['water_pos'],				//JPEG图片压缩比				'WATER_COMPRESSION'=>80,				//水印文字字体文件(写入中文字时需使用支持中文的字体文件)				'WATER_FONTFILE'=> './font.ttf',				//水印文字字符编码				'WATER_CHARSET'=> 'UTF-8',			 );			 //这里将新的参数值，通过后台的表单提交过来；						$settingstr="<?php \n return array(\n";			 foreach($b as $key=>$v){				$settingstr.= "\t'".$key."'=>'".$v."',\n\n";			 }			$settingstr.="\n);\n?>\n";			file_put_contents($setfile,$settingstr); //通过file_put_contents保存setting.config.php文件；								$this->success('信息修改成功',U(GROUP_NAME.'/System/upfileset'));			}else{				$this->error('您没有任何修改或错误！');					}					}else{		$this->id=I('id',0, 'intval');		$id=$_GET['id'];		$upset = M("water"); 		$file=$upset->where("id=1")->find();		$file['file_size'];		$this->assign('file',$file);		$this->verify = M("verify")->where("id='1'")->find(); 		$this->display();		}			}	Public function verify(){//验证码设置			$verify=new Model('verify');			$data=array();			$data['v-length']=$_POST['length'];			$data['v-width']=$_POST['width'];			$data['v-height']=$_POST['height'];			$data['v-bgcolor']=$_POST['bgcolor'];			$data['v-seed']=$_POST['seed'];			$data['v-fontfile']=$_POST['fontfile'];			$data['v-size']=$_POST['size'];			$data['v-color']=$_POST['color'];			$data['v-mode']=$_POST['mode'];			if($verify->where("id=1")->save($data)){			 $W=$verify->where("id=1")->find();			$setfile='./APP'.C('settingverify_path'); 			$b=array(				'VERIFY_LENGTH'=>$W['v-length'],				'VERIFY_WIDTH'=>$W['v-width'],				'VERIFY_HEIGHT'=>$W['v-height'],				'VERIFY_BGCOLOR'=>$W['v-bgcolor'],				'VERIFY_SEED'=>$W['v-seed'],				'VERIFY_FONTFILE'=>$W['v-fontfile'],				'VERIFY_SIZE'=>$W['v-size'],				'VERIFY_COLOR'=>$W['v-color'],				'VERIFY_FUNC'=> 'strtotower',				'VERIFY_MODE'=>$W['v-mode'],			 );			 //这里将新的参数值，通过后台的表单提交过来；						$settingstr="<?php \n return array(\n";			 foreach($b as $key=>$v){				$settingstr.= "\t'".$key."'=>'".$v."',\n\n";			 }			$settingstr.="\n);\n?>\n";			file_put_contents($setfile,$settingstr); 								$this->success('信息修改成功');			}else{				$this->error('您没有任何修改或错误！');					}						}	Public function nav(){		import('Class.Cate',APP_PATH);		$cate=M('cate')->order('sort ASC')->select();	    $this->cate=Cate::channel($cate,'--');		$this->display();				}	Public function navadd(){		import('Class.Cate',APP_PATH);		$cate=M('cate')->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;|--');		$this->display();	}	Public function navedit(){		if(IS_POST){			 import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg','swf','flv');// 设置附件上传类型			$upload->autoSub = true;                      //是否使用子目录保存上传文件  			$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 			$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  			//完整的头像路径			$upload->savePath =  './uploads/';// 设置附件上传目录			//$upload->thumb = true;			 //设置需要生成缩略图的文件后缀			//$upload->thumbPrefix = 'm_,s_';  //生产2张缩略图			 //设置缩略图最大宽度			//$upload->thumbMaxWidth = '200,50';			 //设置缩略图最大高度			//$upload->thumbMaxHeight = '200,50';			 		if(!$upload->upload()) {// 上传错误提示错误信息			$data['pic']=$_POST['pic'];			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();						 }				$cate=M('cate');			$id=$_POST['id'];			$data=array();			$data['name']=$_POST['name'];			$data['pid']=$_POST['pid'];			$data['sort']=$_POST['sort'];			$data['module']=$_POST['module'];			$data['parentid']="1";			$data['url']=$_POST['url'];			$data['window']=$_POST['window'];			$data['status']=$_POST['status'];			$data['enable']=$_POST['enable'];			if($info[0]['savename']){			$data['image']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['image']=$_POST['img'];				}			$data['title']=$_POST['title'];			$data['keys']=$_POST['keys'];			$data['description']=$_POST['description'];			$data['nav']=$_POST['nav'];			$edit=$cate->where("id=$id")->save($data);			if($edit !==false){				if($data['module']=="Single"){					$sid=$id;					$single = M("single"); //实例化User对象					$data=array(						'kinds'=>$sid,						'title'=>$_POST['name'],					); //创建数据对象				$skid=M('single')->where("kinds=$sid")->select();				if($skid){				$single->where("kinds=$sid")->save($data);					}else{					$single->add($data);				}				}							$this->SUCCESS('修改成功');					}else{			$this->error('修改失败');					}		}else{		import('Class.Cate',APP_PATH);		$cate=M('cate')->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;|--');		$this->id=I('id',0, 'intval');		$id=$_GET['id'];		$cate = M("cate"); 		$k=$cate= M("cate")->where("id=$id")->find();		$kn=$k['pid'];		$kname=$cate= M("cate")->where("id=$kn")->find();		$this->assign('k',$k);		$this->assign('kname',$kname);		$this->display();		}			}		Public function addnavhandle(){				$cate=new Model('cate');			 import('ORG.Net.UploadFile');			$upload = new UploadFile();// 实例化上传类			$upload->maxSize  = 3145728 ;// 设置附件上传大小			$upload->allowExts  = array('jpg', 'gif', 'png', 'jpeg','swf','flv');// 设置附件上传类型			$upload->autoSub = true;                      //是否使用子目录保存上传文件  			$upload->subType = 'date';                      //子目录创建方式，默认为hash，可以设置为hash或者date 			$upload->dateFormat = 'Ymd';                     //子目录方式为date的时候指定日期格式  			//完整的头像路径			$upload->savePath =  './uploads/';// 设置附件上传目录		if(!$upload->upload()) {// 上传错误提示错误信息			$data['image']=$_POST['img'];			 }else{// 上传成功 获取上传文件信息			$info =  $upload->getUploadFileInfo();			 }			$data=array();			$data['name']=$_POST['name'];			$data['pid']=$_POST['pid'];			$data['sort']=$_POST['sort'];			$data['module']=$_POST['module'];			$data['parentid']="1";			$data['url']=$_POST['url'];			$data['window']=$_POST['window'];			$data['status']=$_POST['status'];			$data['enable']=$_POST['enable'];			if($info[0]['savename']){			$data['image']=$info[0]['savepath'].$info[0]['savename'];				}else{			$data['image']=$_POST['img'];				}			$data['title']=$_POST['title'];			$data['keys']=$_POST['keys'];			$data['description']=$_POST['description'];			$data['nav']=$_POST['nav'];			if(M('cate')->add($data)){				if($data['module']=="Single"){					$maxid = M("cate")->order('id DESC')->LIMIT(1)->select(); // 实例化User对象					$sid=$maxid[0]['id'];					$single = M("Single"); //实例化User对象					$data=array(						'kinds'=>$sid,						'title'=>$_POST['name'],					); //创建数据对象				$single->add($data);								}			$this->SUCCESS('添加成功',U(GROUP_NAME.'/System/nav'));					}else{			$this->error('添加失败');					}		}			//产品列表删除操作	Public function del(){		$id = intval($_GET['id']);		$cate = M("cate"); // 实例化User对象		if($cate->where("id='$id'")->delete()){					echo 1;				}else{					echo 0;				}		}	//产品列表全选删除操作	Public function delall(){				$id =$_POST['id'];		$name=$this->getActionName();//获取模型名称		$model=D($name);//获取当前模块的操作对象		if(!empty($model)){			$pk=$model->getpk();//获取传递参数（以ID删除）			if(!empty($id)){				$condition=array($pk=>array('IN',$id));								if(false!==$model->where($condition)->delete()){					echo 1;				}else{					echo 0;				}			}					}					}	//系统下拉选项	Public function select(){		import('Class.Cate',APP_PATH);		$hangye=M('select')->order('sort ASC')->select();	    $this->hangye=Cate::channel($hangye,'|--');		$this->display();				}	Public function select_add(){		$time=time();		if(IS_POST){			$data=array();			$data['pid']=$_POST['pid'];			$data['name']=$_POST['name'];			$data['title']=$_POST['title'];			$data['description']=$_POST['description'];			$data['sort']=$_POST['sort'];			$data['status']=$_POST['status'];			$data['time']=$time;			if(M('select')->add($data)){			$this->SUCCESS('添加成功',U(GROUP_NAME.'/System/select'));			}else{			$this->error('添加失败');					}		}else{			import('Class.Cate',APP_PATH);			$hangye=M('select')->order('sort ASC')->select();			$this->hangye=Cate::channel($hangye,'--');			$this->display();			}				}	Public function select_edit(){		if(IS_POST){			$select=M('select');			$id=$_POST['id'];			$data=array();			$data['pid']=$_POST['pid'];			$data['name']=$_POST['name'];			$data['title']=$_POST['title'];			$data['description']=$_POST['description'];			$data['sort']=$_POST['sort'];			$data['status']=$_POST['status'];			$data['time']=$time;			$edit=$select->where("id=$id")->save($data);			if($edit !==false){							$this->SUCCESS('修改成功');					}else{			$this->error('修改失败');					}		}else{		import('Class.Cate',APP_PATH);		$cate=M('select')->order('sort ASC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;|--');		$this->id=I('id',0, 'intval');		$id=$_GET['id'];		$select = M("select"); 		$k=$select= M("select")->where("id=$id")->find();		$kn=$k['pid'];		$kname=$select= M("select")->where("id=$kn")->find();		$this->k=$k;		$this->kname=$kname;		$this->display();		}			}	//产品列表删除操作	Public function selectdel(){		$id = intval($_GET['id']);		$select = M("select"); // 实例化User对象		if($select->where("id='$id'")->delete()){					echo 1;				}else{					echo 0;				}		}		}?>