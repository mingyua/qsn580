<?phpclass WeixinAction extends Action {	Public function index() {		$this->time=time();		$this->uid=$_SESSION['userid'];		$this->wxapi=M('wxapi')->select();		$this->wxmenu=M('wxmenu')->select();		$this->display();	}//创建文件夹	Public function createDir(){		import('Class.FileUtil',APP_PATH);		$path=$_GET['path'];		$cfile=$path.'/'.$_GET['newname'];		$file=FileUtil::createDir($cfile);		if($file){		$this->success('成功！','',20);			}	}//创建文件	Public function creatfile(){		import('Class.FileUtil',APP_PATH);		$path=$_GET['path'];		$cfile=$path.'/'.$_GET['newname'];		$file=FileUtil::createFile($cfile);		if($file){		$this->success('成功！','',20);			}	}//删除文件夹	Public function unlinkDir(){		import('Class.FileUtil',APP_PATH);		$path=$_GET['file'];		$file=FileUtil::unlinkDir($path);		if($file){		$this->success('成功！','',20);			}	}//删除文件	Public function unlinkFile(){		import('Class.FileUtil',APP_PATH);		$path=$_GET['file'];		$file=FileUtil::unlinkFile($path);		if($file){		$this->success('成功！','',20);			}	}		Public function filelist() {		$mu=isset($_GET['dir'])?$_GET['dir']:'D:/wamp/www/wxshop/APP/Modules/Index/tpl';		//写一个函数，能够遍历一个文件夹下的所有文件和子文件夹。		function my_scandir($dir)		{			$files=array();			if(is_dir($dir))			{				if($handle=opendir($dir))				{					while(($file=readdir($handle))!==false)					{						if($file!="." && $file!="..")						{							if(is_dir($dir."/".$file))							{								$files[]=array(									'name'=>$file,									'filetime'=>date("Y-m-d H:i:s", filemtime($dir.'/'.$file)),									'filesize'=>'',									'url'=>'<a href="filelist/?dir='.$dir.'/'.$file.'">进入目录</a>&nbsp;&nbsp;<a href="javascript:;" onclick="javascript:filerename(\''.$file.'\');">重命名</a>&nbsp;&nbsp;<a href="filelist?m=weixin&c=filelist&a=unlinkDir&file='.$dir.'/'.$file.'" onclick="javascript:return confirm(\'删除后无法恢复！确认删除吗？\');">删除</a>',									'image'=>'dir',								);							}							else							{								$files[]=array(									'name'=>$file,									'filetime'=>date("Y-m-d H:i:s", filemtime($dir.'/'.$file)),									'filesize'=>sprintf("%01.2f", filesize($dir.'/'.$file)/1024) ."kb",							'url'=>'<a href="filelist?m=weixin&c=filelist&a=fileedit&path='.$dir.'/'.$file.'&url='.$file.'&dir='.$dir.'">修改</a>&nbsp;&nbsp;<a href="javascript:;" onclick="javascript:filerename(\''.$file.'\');">重命名</a>&nbsp;&nbsp;<a href="filelist?m=weixin&c=filelist&a=unlinkFile&file='.$dir.'/'.$file.'" onclick="javascript:return confirm(\'删除后无法恢复！确认删除吗？\');">删除</a>',									'image'=>'text',								);							}						}					}					closedir($handle);					return $files;				}			}		}		$arr= my_scandir($mu);		$this->arr=$arr;		$this->mu=$mu;	$this->display();    }    public function fileedit(){//修改文件内容		if(IS_POST){				$oldfilename=$_POST['oldfilename'];				$name=$_POST['filename'];				$content=$_POST['content'];$str=<<<EOT$contentEOT;		$contents=file_put_contents($_GET['path'],$str);		if($contents){		echo 1;		}else{			echo "0";		}					}else{			$this->mu=$_GET['dir'];			$path=$_GET['path'];			$url=$_GET['url'];			$myfile = fopen($path, "r") or die("Unable to open file!");			$this->content=fread($myfile,filesize($path));			$this->path=$path;			$this->url=$url;		$this->display();					}    }    public function resetname(){//重命名文件		$path=$_GET['path'];		$old_name=$path.'/'.$_GET['oldname'];		$new_name=$path.'/'.$_GET['newname'];		$re=@rename($old_name,$new_name);		if($re == false){			$this->error('失败！','',20);		}		else{			$this->success('成功！','',20);		}			}				Public function add() {		$this->time=time();		$this->uid=$_SESSION['userid'];		import('Class.Cate',APP_PATH);		$cate=M('wxmenu')->order('sort DESC')->select();		$this->cate=Cate::unlimitedForlevel($cate,'&nbsp;&nbsp;┗━');		$this->wxapi=M('wxapi')->where("uid='$this->uid'")->find();		$this->wxmenu=M('wxmenu')->where("uid='$this->uid' and pid='0'")->select();		$this->display();	}	Public function Reply() {		$this->time=time();		$this->uid=$_SESSION['userid'];		$this->wxreply=M('wxreply')->where("uid='$this->uid'")->select();		$this->wxmenu=M('wxmenu')->where("uid='$this->uid' and pid='0'")->select();		$this->display();	}	Public function resphone() {		if(IS_POST){			$id=intval($_GET['id']);					}else{		$this->display();		}							}	Public function phone() {		$wxmenu=new Model('wxmenu');		$lists=$wxmenu->where('pid=0')->order("sort DESC")->limit('3')->select();		foreach($lists as $k=>$v){//$k=>$v  是把数组压到$data里面			$where=array('pid'=>$v['id']);			$lists[$k]['ejlist']=$wxmenu->where($where)->order('sort DESC')->select();		  }		$this->lists=$lists;		//p($lists);		$this->display();							}	Public function addmenu() {			$wxmenu=new Model('wxmenu');			if(M('wxmenu')->add($_POST)){				$this->success('添加成功',U(GROUP_NAME.'/Weixin/add'));				}else{					$this->error('添加失败');					}				}	Public function edit() {		if(IS_POST){			$id=$_POST['id'];			if($id<>null){				$wxapi=new Model('wxapi');				$data=array();				$data['id']=$_POST['id'];				$data['uid']=$_POST['uid'];				$data['appid']=$_POST['appid'];				$data['appsecret'] =$_POST['appsecret'];				$data['mchid']=$_POST['mchid'];				$data['key']=$_POST['key'];				$data['time']=time();				$count=$wxapi->save($data);				if($count !==false){					$this->success('数据修改成功！',U(GROUP_NAME.'/Weixin/add'));				}else{					$this->error('数据修改失败');						}			}else{				if(M('wxapi')->add($_POST)){					$this->success('添加成功');					}else{						$this->error('添加失败');												}			}					}	}	Public function del(){		$slideid = intval($_GET['id']);		$slide = M("slide"); // 实例化User对象		if($slide->where("id=$slideid")->delete()){					$this->success(C('delete_ok'));				}else{					$this->error(C('delete_error'));				}				}			Public function delall(){				$ids = I('id');		$article = M("slide");		if($article->where(array('id'=>array('in',$ids)))->delete()){					$this->success(C('delete_ok'),U(GROUP_NAME.'/Slide/index'));				}else{					$this->error(C('delete_error'));				}				}	public function send() {        $api = M('wxapi')->where("id='1'")->find(); //取出数据库中保存的appid和appsecret		        $url_get = 'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid='.$api['appid'].'&secret='.$api['appsecret'];		$ch = curl_init();		curl_setopt($ch, CURLOPT_URL, $url_get);		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); 		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); 		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);		$output = curl_exec($ch);		curl_close($ch);		$jsoninfo = json_decode($output, true);		$access_token = $jsoninfo["access_token"];				echo  $access_token;        $json = $jsoninfo["access_token"]; //取得access_token        if ($api['appid'] == false || $api['appsecret'] == false) {            $this->error('必须先填写【AppId】【AppSecret】');            exit;        } //开始拼接数据        $data = ' {            "button":                [';        $class = M('wxmenu')->where("pid='0'")->limit(3)->order('sort desc')->select(); //取出顶级菜单        $k = 1;        foreach ($class as $key => $vo) { //主菜单            $data.= ' {                    "name":                        "' . $vo['name'] . '",'; //取出二级菜单            $c = M('wxmenu')->where("pid='$vo[id]'")->limit(5)->order('sort desc')->select();            $count = M('wxmenu')->where("pid='$vo[id]'")->limit(5)->order('sort desc')->count(); //拼接子菜单            if ($c != false) {                $data.= '"sub_button":[';                $i = 1;                foreach ($c as $voo) {                    if ($i == $count) {                        $data.= '{"type":"' . $voo['type'] . '","name":"' . $voo['name'] . '","' . $voo['key'] . '":"' . $voo['url'] . '"}';                    } else {                        $data.= '{"type":"' . $voo['type'] . '","name":"' . $voo['name'] . '","' . $voo['key'] . '":"' . $voo['url'] . '"},';                    }                    $i++;                }                $data.= ']';            } else {                $data.= '"type":"' . $vo['type'] . '","' . $vo['key'] . '":"' . $vo['url'] . '", ';                    }                    if ($k == 3) {                        $data.= '                    }                    ';                } else {                    $data.= '                }                , ';            }            $k++;        }        $data.= ']    }    '; //先删除已有的自定义菜单 		echo $data;die();	file_get_contents('https://api.weixin.qq.com/cgi-bin/menu/delete?access_token='.$json); //需要提交的url 	$url='https://api.weixin.qq.com/cgi-bin/menu/create?access_token='.$json;	if($this->api_notice_increment($url,$data)==false){ 		echo "菜单生成失败！"; 		}else{ 		echo "菜单生成成功！"; 		} 		exit; 	} //POST提交方法 		function api_notice_increment($url, $data){ 			$ch = curl_init(); 			$header = "Accept - Charset:utf - 8"; 			curl_setopt($ch, CURLOPT_URL, $url); 			curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST"); 			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); 			curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); 			curl_setopt($curl, CURLOPT_HTTPHEADER, $header); 			curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (compatible; MSIE 5.01; Windows NT 5.0)'); 			curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); 			curl_setopt($ch, CURLOPT_AUTOREFERER, 1); 			curl_setopt($ch, CURLOPT_POSTFIELDS, $data); 			curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); 			$tmpInfo = curl_exec($ch); 			if (curl_errno($ch)) { 				return false; 				}else{ 				return true; 			} 		} 		}