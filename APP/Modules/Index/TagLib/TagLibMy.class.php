<?phpimport('TagLib');/**自定义标签*/class TagLibMy extends TagLib{	protected $tags=array(		'nav'=>array('attr'=>'limit,order','close'=>1),		'foolist'   =>  array('attr'=>'model,where,order,num,id,page,pagesize,query,flag,field,cache','level'=>3)		);	  public function _nav($attr,$content){                           $attr=$this->parseXmlAttr($attr);//内部函数                           $str=<<<str<?php	\$_nav_cate=M('cate')->where("nav='1' and enable='1'")->order("{$attr['order']}")->limit({$attr['limit']})->select();	import('Class.Cate',APP_PATH);	\$_nav_cate=Cate::unlimitedForLayer(\$_nav_cate);	foreach(\$_nav_cate as \$_nav_cate_v) :	extract(\$_nav_cate_v);	\$mainurl=U(GROUP_NAME.'/'.\$url);	\$url=U('/c_'.\$id);?>str;        $str.=$content;        $str.='<?php endforeach;?>';        return $str;      }      //by 无语西风// Lib/Driver/TagLid/TagLiCx.class.php   //万能标签 <foolist model='catalog' where='' order='' num='10' page='true' pagesize='15' field='' >//'foolist'=>array('attr'=>'model,where,order,num,id,page,pagesize,query,flag,debug','level'=>3),  //万能的输出标签public function _foolist($attr,$content)    {         $html='';                  $tag       = $this->parseXmlAttr($attr,'foolist');                  $model     =!empty($tag['model'])?$tag['model']:'';              $order     =!empty($tag['order'])?$tag['order']:'';         $num       =!empty($tag['num'])?$tag['num']:'';         $id        =!empty($tag['id'])?$tag['id']:'d';         $where     =!empty($tag['where'])?$tag['where']:'';         //使where支持 条件判断,添加不等于的判断                  $this->comparison['noteq']= '<>';         $this->comparison['sqleq']= '=';         $where     =$this->parseCondition($where);          $page=false;         if(!empty($tag['page'])) $page=$tag['page'];         if($page=='ture') $page=false;                  $pagesize  =!empty($tag['pagesize'])?$tag['pagesize']:'10';         //是否用缓存,默认是false         $cache     =!empty($tag['cache'])?$tag['cache']:false;         $query     =!empty($tag['query'])?$tag['query']:'';         $field     =!empty($tag['field'])?$tag['field']:'';         $debug     =!empty($tag['debug'])?$tag['debug']:false;         //使query 支持条件判断         $query     =$this->parseCondition($query);          //if($where!='')  $where.=' and '.$flag;          $html.='<?php $m=D("'.$model.'");';         //如果使用了query,将忽略使用where,num,order,page,field,cache 等,使用query无法实现分页         if($query){               if($cache!=false){                $html.='$cache_key="key_".md5("'.$query.'");';                $html.='if(!$ret=S($cache_key)){ $ret=$m->query("'.$query.'");S($cache_key,$ret);}';             }else{                $html.='$ret=$m->query("'.$query.'");';             }                                  }         //如果使用了分页,缓存也不生效         if($page && !$query){               $html.='import("Class.Page.Page"); ';    //这里改成你的Page类                          $html.='$count=$m->where("'.$where.'")->count();';               $html.='$p = new Page ( $count, '.$pagesize.' );';               //如果使用了分页，num将不起作用               $html.='$ret=$m->field("'.$field.'")->where("'.$where.'")->limit($p->firstRow.",".$p->listRows)->order("'.$order.'")->select();';               $html.='$cutInfo ="<div class=cutinfo > ". $p->show ()."</div>";';          }         //如果没有使用分页，并且没有 query         if(!$page && !$query){                  //有缓存              if($cache!=false){                  //包含缓存判断                  $html.='$cache_key="key_".md5($m->field("'.$field.'")->where("'.$where.'")->order("'.$order.'")->limit("'.$num.'")->select(false));';                  $html.='if(!$ret=S($cache_key)){ $ret=$m->field("'.$field.'")->where("'.$where.'")->order("'.$order.'")->limit("'.$num.'")->select(); S($cache_key,$ret,'.$cache.'); }';              }else{                  //没有缓存                 $html.='$ret=$m->field("'.$field.'")->where("'.$where.'")->order("'.$order.'")->limit("'.$num.'")->select();';              }                       }                 if($debug!=false){                 $html.='dump($ret);dump($m->getLastSql());';         }         $html.='foreach($ret as $key=>$'.$id.'): ?>';         $html.=$this->tpl->parse($content);                     $html.='<?php endforeach; ?>';                 if($page)    $html.='<?php echo $cutInfo;?>';          return $html;             } }?>	